syntax = "proto3";

option go_package = "github.com/adammck/ranger/pkg/proto";

import "ranje.proto";

package ranger;

message RangesListRequest {
}

message RangesListResponse {
  repeated RangeResponse ranges = 1;
}

message RangeRequest {
  uint64 range = 1;
}

// Similar to Placement (from ranje.proto), but includes extra junk for debug
// views. The other one is used on the control plane, so should be minimal.
message PlacementWithRangeInfo {
  Placement placement = 1;
  RangeInfo range_info = 2;
}

message RangeResponse {
  RangeMeta meta = 1;
  RangeState state = 2;

  // These two are obviously redundant when all ranges are dumped, but the
  // output is intended to be useful, not correct.
  repeated uint64 parents = 3;
  repeated uint64 children = 4;

  repeated PlacementWithRangeInfo placements = 5;
}

message NodesListRequest {
}

message NodesListResponse {
  repeated NodeResponse nodes = 1;
}

message NodeRequest {
  string node = 1;
}

message NodeMeta {
  string ident = 1;
  string address = 2;
  bool want_drain = 3;
}

// TODO: Remove this, and use PlacementWithRangeInfo
message NodeRange {
  RangeMeta meta = 1;
  PlacementState state = 3;
}

message NodeResponse {
  NodeMeta node = 1;
  repeated NodeRange ranges = 2;
}

service Debug {
  rpc RangesList (RangesListRequest) returns (RangesListResponse) {}
  rpc Range (RangeRequest) returns (RangeResponse) {}
  rpc NodesList (NodesListRequest) returns (NodesListResponse) {}
  rpc Node (NodeRequest) returns (NodeResponse) {}
}
