syntax = "proto3";

option go_package = "github.com/adammck/ranger/pkg/proto";

package ranger;

message Ident {
  string scope = 1;
  uint64 key = 2;
}

message Range {
  // Unique for every range.
  Ident ident = 1;

  // Range of the keys in this range.
  bytes start = 2; // inclusive
  bytes end = 3; // exclusive
}

message RangeNode {
  Range range = 1;
  string node = 2;
}

service Node {
  rpc Give (GiveRequest) returns (GiveResponse) {}
  rpc Serve (ServeRequest) returns (ServeResponse) {}
  rpc Take (TakeRequest) returns (TakeResponse) {}
  rpc Drop (DropRequest) returns (DropResponse) {}
}

message GiveRequest {
  Range range = 1;

  // The range(s) which this range was created from, and the nodes where they
  // can currently be found. This is empty is the range is brand new. Nodes may
  // use this info to restore the current state of the range when accepting it.
  repeated RangeNode parents = 3;
}

message GiveResponse {
}

message ServeRequest {
  Ident range = 1;
  bool force = 2;
}

message ServeResponse {
}

message TakeRequest {
  Ident range = 1;
}

message TakeResponse {
}

message DropRequest {
  Ident range = 1;
  bool force = 2;
}

message DropResponse {
}
